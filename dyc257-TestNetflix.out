g++ -pedantic -std=c++11 -Wall -Weffc++ -fprofile-arcs -ftest-coverage Netflix.c++ TestNetflix.c++ -o TestNetflix -lgtest -lgtest_main -pthread
clang-check -extra-arg=-std=c++11          TestNetflix.c++ --
clang-check -extra-arg=-std=c++11 -analyze TestNetflix.c++ --
valgrind ./TestNetflix                               >  TestNetflix.tmp 2>&1
gcov -b Netflix.c++ | grep -A 5 "File 'Netflix.c++'" >> TestNetflix.tmp
cat TestNetflix.tmp
==37== Memcheck, a memory error detector
==37== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==37== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==37== Command: ./TestNetflix
==37==
Running main() from gtest_main.cc
[==========] Running 21 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 21 tests from NetflixFixture
[ RUN      ] NetflixFixture.read_1
[       OK ] NetflixFixture.read_1 (14 ms)
[ RUN      ] NetflixFixture.read_2
[       OK ] NetflixFixture.read_2 (3 ms)
[ RUN      ] NetflixFixture.read_3
[       OK ] NetflixFixture.read_3 (3 ms)
[ RUN      ] NetflixFixture.oPredict_1
[       OK ] NetflixFixture.oPredict_1 (24 ms)
[ RUN      ] NetflixFixture.oPredict_2
[       OK ] NetflixFixture.oPredict_2 (4 ms)
[ RUN      ] NetflixFixture.oPredict_3
[       OK ] NetflixFixture.oPredict_3 (4 ms)
[ RUN      ] NetflixFixture.print_1
[       OK ] NetflixFixture.print_1 (5 ms)
[ RUN      ] NetflixFixture.print_2
[       OK ] NetflixFixture.print_2 (2 ms)
[ RUN      ] NetflixFixture.print_3
[       OK ] NetflixFixture.print_3 (2 ms)
[ RUN      ] NetflixFixture.RMSE_1
[       OK ] NetflixFixture.RMSE_1 (26 ms)
[ RUN      ] NetflixFixture.RMSE_2
[       OK ] NetflixFixture.RMSE_2 (3 ms)
[ RUN      ] NetflixFixture.RMSE_3
[       OK ] NetflixFixture.RMSE_3 (4 ms)
[ RUN      ] NetflixFixture.solve_1
[       OK ] NetflixFixture.solve_1 (37 ms)
[ RUN      ] NetflixFixture.solve_2
[       OK ] NetflixFixture.solve_2 (10 ms)
[ RUN      ] NetflixFixture.solve_3
[       OK ] NetflixFixture.solve_3 (13 ms)
[ RUN      ] NetflixFixture.fileToMap_1
[       OK ] NetflixFixture.fileToMap_1 (60 ms)
[ RUN      ] NetflixFixture.fileToMap_2
[       OK ] NetflixFixture.fileToMap_2 (7 ms)
[ RUN      ] NetflixFixture.fileToMap_3
[       OK ] NetflixFixture.fileToMap_3 (7 ms)
[ RUN      ] NetflixFixture.arCache_1
[       OK ] NetflixFixture.arCache_1 (9 ms)
[ RUN      ] NetflixFixture.arCache_2
[       OK ] NetflixFixture.arCache_2 (6 ms)
[ RUN      ] NetflixFixture.arCache_3
[       OK ] NetflixFixture.arCache_3 (8 ms)
[----------] 21 tests from NetflixFixture (261 ms total)

[----------] Global test environment tear-down
[==========] 21 tests from 1 test case ran. (297 ms total)
[  PASSED  ] 21 tests.
==37==
==37== HEAP SUMMARY:
==37==     in use at exit: 72,704 bytes in 1 blocks
==37==   total heap usage: 469 allocs, 468 frees, 261,114 bytes allocated
==37==
==37== LEAK SUMMARY:
==37==    definitely lost: 0 bytes in 0 blocks
==37==    indirectly lost: 0 bytes in 0 blocks
==37==      possibly lost: 0 bytes in 0 blocks
==37==    still reachable: 72,704 bytes in 1 blocks
==37==         suppressed: 0 bytes in 0 blocks
==37== Rerun with --leak-check=full to see details of leaked memory
==37==
==37== For counts of detected and suppressed errors, rerun with: -v
==37== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Netflix.c++'
Lines executed:90.83% of 109
Branches executed:90.12% of 162
Taken at least once:50.00% of 162
Calls executed:73.22% of 183
Creating 'Netflix.c++.gcov'
Netflix.c++ found
Netflix.h found
Netflix.log found
html found
RunNetflix.c++ found
RunNetflix.in found
RunNetflix.out found
TestNetflix.c++ found
TestNetflix.out found
success
