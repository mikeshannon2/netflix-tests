==469== Memcheck, a memory error detector
==469== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==469== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==469== Command: ./TestNetflix
==469== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from NetflixFixture
[ RUN      ] NetflixFixture.print_1
[       OK ] NetflixFixture.print_1 (34 ms)
[ RUN      ] NetflixFixture.print_2
[       OK ] NetflixFixture.print_2 (31 ms)
[ RUN      ] NetflixFixture.print_3
[       OK ] NetflixFixture.print_3 (4 ms)
[ RUN      ] NetflixFixture.load_data_1
[       OK ] NetflixFixture.load_data_1 (147 ms)
[ RUN      ] NetflixFixture.load_data_2
[       OK ] NetflixFixture.load_data_2 (34 ms)
[ RUN      ] NetflixFixture.load_data_3
[       OK ] NetflixFixture.load_data_3 (33 ms)
[ RUN      ] NetflixFixture.read_1
[       OK ] NetflixFixture.read_1 (9 ms)
[ RUN      ] NetflixFixture.read_2
[       OK ] NetflixFixture.read_2 (7 ms)
[ RUN      ] NetflixFixture.eval_1
[       OK ] NetflixFixture.eval_1 (7 ms)
[ RUN      ] NetflixFixture.eval_2
[       OK ] NetflixFixture.eval_2 (5 ms)
[ RUN      ] NetflixFixture.eval_3
[       OK ] NetflixFixture.eval_3 (4 ms)
[ RUN      ] NetflixFixture.eval_4
[       OK ] NetflixFixture.eval_4 (5 ms)
[ RUN      ] NetflixFixture.solve_1
[       OK ] NetflixFixture.solve_1 (24 ms)
[ RUN      ] NetflixFixture.solve_2
[       OK ] NetflixFixture.solve_2 (12 ms)
[ RUN      ] NetflixFixture.solve_3
[       OK ] NetflixFixture.solve_3 (12 ms)
[----------] 15 tests from NetflixFixture (397 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (496 ms total)
[  PASSED  ] 15 tests.
==469== 
==469== HEAP SUMMARY:
==469==     in use at exit: 72,704 bytes in 1 blocks
==469==   total heap usage: 387 allocs, 386 frees, 152,067 bytes allocated
==469== 
==469== LEAK SUMMARY:
==469==    definitely lost: 0 bytes in 0 blocks
==469==    indirectly lost: 0 bytes in 0 blocks
==469==      possibly lost: 0 bytes in 0 blocks
==469==    still reachable: 72,704 bytes in 1 blocks
==469==         suppressed: 0 bytes in 0 blocks
==469== Rerun with --leak-check=full to see details of leaked memory
==469== 
==469== For counts of detected and suppressed errors, rerun with: -v
==469== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Netflix.c++'
Lines executed:100.00% of 57
Branches executed:100.00% of 84
Taken at least once:60.71% of 84
Calls executed:88.33% of 60
Creating 'Netflix.c++.gcov'
